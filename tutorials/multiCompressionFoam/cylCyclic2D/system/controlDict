/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: dualFuelEngine addition to OpenFOAM v8
   \\    /   O peration     | Website:  https://github.com/StasF1/dualFuelEngine
    \\  /    A nd           | Version:  0.5.x-alpha
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include        "../../../resources/engineProperties/MAN-BW"

endTimeCA       #calc "($EVO + 180)*$deltaTCA";


application     multiCompressionFoam; // multiCompressionFoam \ moveMesh

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         $endTimeCA;

deltaT          1e-6;

writeControl    adjustableRunTime;

writeInterval   $deltaTCA;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression false;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep  true;

maxCo           0.1;

functions
{
    #includeFunc CourantNo

    #includeFunc MachNo
    #includeFunc writeObjects(e, K)
    #includeFunc add(e, K)
    #includeFunc cellMin(p,T,Ma,rho,e,alphaAir,alphaGas,alphaExh)
    #includeFunc cellMax(p,T,Ma,rho,e,alphaAir,alphaGas,alphaExh)

    #includeFunc flowRatePatch(name=inlet)
    #includeFunc flowRatePatch(name=injection)
    #includeFunc flowRatePatch(name=outlet)

    readFields(V)
    {
        type            readFields;
        libs            ("libfieldFunctionObjects.so");
        writeControl    outputTime;
        fields           (V);
    }
    volFieldValue(operation=sum,V)
    {
        type            volFieldValue;
        libs            ("libfieldFunctionObjects.so");
        writeControl    outputTime;
        log             true;
        writeFields     false;
        regionType      cellZone;
        name            cylinder;
        operation       sum;
        fields           (V);
    }

    volFieldValue(operation=volAverage)
    {
        type            volFieldValue;
        libs            ("libfieldFunctionObjects.so");
        writeControl    outputTime;
        log             true;
        writeFields     false;
        regionType      cellZone;
        name            cylinder;
        operation       volAverage;
        fields
        (
            p T rho e K alphaAir alphaExh alphaGas
        );
    }
}


// ************************************************************************* //
